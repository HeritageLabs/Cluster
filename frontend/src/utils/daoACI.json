{"encodedAci":{"contract":{"functions":[{"arguments":[{"name":"_voteTime","type":"int"},{"name":"_quorum","type":"int"},{"name":"_members","type":{"list":["address"]}}],"name":"init","payable":false,"returns":"DAO.state","stateful":true},{"arguments":[{"name":"_id","type":"int"}],"name":"getProposal","payable":false,"returns":"DAO.proposal","stateful":false},{"arguments":[],"name":"getProposals","payable":false,"returns":{"list":["DAO.proposal"]},"stateful":false},{"arguments":[],"name":"getOngoingProposals","payable":false,"returns":{"list":["DAO.proposal"]},"stateful":false},{"arguments":[],"name":"getProposalsToExecute","payable":false,"returns":{"list":["DAO.proposal"]},"stateful":false},{"arguments":[],"name":"getDetails","payable":false,"returns":"DAO.details","stateful":false},{"arguments":[{"name":"_proposalId","type":"int"}],"name":"vote","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"_title","type":"string"},{"name":"_description","type":"string"},{"name":"_type","type":"string"},{"name":"_value","type":"int"},{"name":"_receipient","type":"address"}],"name":"createProposal","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"_proposalId","type":"int"}],"name":"executeProposal","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"_quorum","type":"int"}],"name":"_setQuorum","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"_voteTime","type":"int"}],"name":"_setVoteTime","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"_member","type":"address"}],"name":"_addMember","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"_member","type":"address"}],"name":"_removeMember","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"donate","payable":true,"returns":"int","stateful":true}],"kind":"contract_main","name":"DAO","payable":false,"state":{"record":[{"name":"voteTime","type":"int"},{"name":"quorum","type":"int"},{"name":"members","type":{"list":["address"]}},{"name":"_ismember","type":{"map":["address","bool"]}},{"name":"proposals","type":{"list":["DAO.proposal"]}},{"name":"totalProposals","type":"int"},{"name":"totalMembers","type":"int"}]},"type_defs":[{"name":"proposal","typedef":{"record":[{"name":"id","type":"int"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"proposalType","type":"string"},{"name":"value","type":"int"},{"name":"receipient","type":"address"},{"name":"endTime","type":"int"},{"name":"votes","type":"int"},{"name":"isExecuted","type":"bool"}]},"vars":[]},{"name":"details","typedef":{"record":[{"name":"balance","type":"int"},{"name":"members","type":{"list":["address"]}},{"name":"quorum","type":"int"},{"name":"voteTime","type":"int"}]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\n\n\nmain contract DAO =\n  record state = {voteTime : int,quorum : int,members : list(address),_ismember : map(address, bool),proposals : list(DAO.proposal),totalProposals : int,totalMembers : int}\n  record proposal = {id : int,title : string,description : string,proposalType : string,value : int,receipient : address,endTime : int,votes : int,isExecuted : bool}\n  record details = {balance : int,members : list(address),quorum : int,voteTime : int}\n  stateful entrypoint init : (int, int, list(address)) => DAO.state\n  entrypoint getProposal : (int) => DAO.proposal\n  entrypoint getProposals : () => list(DAO.proposal)\n  entrypoint getOngoingProposals : () => list(DAO.proposal)\n  entrypoint getProposalsToExecute : () => list(DAO.proposal)\n  entrypoint getDetails : () => DAO.details\n  stateful entrypoint vote : (int) => unit\n  stateful entrypoint createProposal : (string, string, string, int, address) => int\n  stateful entrypoint executeProposal : (int) => unit\n  stateful entrypoint _setQuorum : (int) => unit\n  stateful entrypoint _setVoteTime : (int) => unit\n  stateful entrypoint _addMember : (address) => unit\n  stateful entrypoint _removeMember : (address) => unit\n  payable stateful entrypoint donate : () => int\n"}